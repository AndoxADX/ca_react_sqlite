# Use the official .NET SDK image as a base image
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build-env
# Set environment variables
ENV DOTNET_CLI_TELEMETRY_OPTOUT=1 \
    DOTNET_SDK_VERSION=8.0.206

# Set the working directory
WORKDIR /app

# Install Node.js and npm
RUN apt-get update && \
    apt-get install -y curl && \
    curl -sL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get install -y nodejs

# Copy the solution file
COPY ca_react_sqlite.sln ./

# Copy the entire src and tests directories
COPY src/ ./src/
COPY tests/ ./tests/

# Print the contents of the solution directory for debugging
RUN ls -R /app

# Restore dependencies
# RUN dotnet restore ca_react_sqlite.sln  
# --verbosity detailed

# Copy the rest of the application files
COPY . ./

# Build the solution
RUN dotnet build ca_react_sqlite.sln -c Release 
# --no-restore --disable-parallel

# Publish the application
RUN dotnet publish src/Web/Web.csproj -c Release -o out

# Use the official .NET runtime image as a base image
FROM mcr.microsoft.com/dotnet/aspnet:8.0

# Set the working directory
WORKDIR /app

# Copy the published files from the build environment
COPY --from=build-env /app/out .

# Specify the entry point for the Docker container
ENTRYPOINT ["dotnet", "Web.dll"]